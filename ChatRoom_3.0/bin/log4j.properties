#only check message of level INFO or above
#log4j.rootLogger=INFO, stdout, R, D

##print messages to console
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
##print with specified layout
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
## Print the date in ISO 8601 format [-5p: take 5 chars' position]
#log4j.appender.stdout.layout.ConversionPattern=%d %-5p [%t] %c :: %m%n

log4j.rootLogger=INFO, R, D

# print message to files, create a new log when existed log overs the max file size
log4j.appender.R=org.apache.log4j.RollingFileAppender
# log file name
log4j.appender.R.File=example.log
log4j.appender.R.MaxFileSize=100KB
# Keep one backup file
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
# output format [date priority thread class message \n]
log4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p [%-15t] %c :: %m%n

log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = error.log
log4j.appender.D.Append = true
# print only messages of level ERROR or above  
log4j.appender.D.Threshold = ERROR 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss} %-5p [%t] %c :: %m%n

## Print only messages of level WARN or above in the package com.foo.
#log4j.logger.com.foo=WARN

